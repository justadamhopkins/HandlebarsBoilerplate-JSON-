@mixin clearfix {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin breakpoint($breakpoint) {
    @if $breakpoint==large-desktop {
        @media only screen and (max-width: 1200px) {
            @content ;
        }
    }
    @else if $breakpoint==desktop {
        @media (max-width: 1080px) {
            @content ;
        }
    }
    @else if $breakpoint==tablet-landscape {
        @media (max-width: 1024px) {
            @content ;
        }
    }
    @else if $breakpoint==tablet-portrait {
        @media (max-width: 768px) {
            @content ;
        }
    }
    @else if $breakpoint==phone-landscape-large {
        @media (max-width: 670px) {
            @content ;
        }
    }
    @else if $breakpoint==phone-portrait-large {
        @media (max-width: 480px) {
            @content ;
        }
    }
    @else if $breakpoint==phone-portrait-small {
        @media (max-width: 320px) {
            @content ;
        }
    }
}


/* font size to EM converter mixin

calculate EM values use font-size: referencing in sass like this 

Example:

"font-size: em(24px);"  */

@function em($target, $context: $base__font-size) {
    @return ($target / $context) * 1em;
}


/* pseudo element mixin

/* When using ::before and ::after you'll always need these three, so we're saving two lines of code every time you use this. 

Example :

div::after {
    @include pseudo;
    top: -1rem; left: -1rem;
    width: 1rem; height: 1rem;
} */

@mixin pseudo($display: block, $pos: absolute, $content: '') {
    content: $content;
    display: $display;
    position: $pos;
}


/* transition mixin 

Example : i have passed two variable arguments into my below transition example

a {
  color: gray;
  @include transition(color .3s ease, font-size .5s ease);
  &:hover {
    color: black;
  }
}

*/

@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transition: $args;
    -o-transition: $args;
    transition: $args;
}


/*link stylin mixin

Example : 

a {

    @include links(orange, blue, yellow, teal);
}

*/

@mixin links ($link, $visited, $hover, $active) {
    & {
        color: $link;
        &:visited {
            color: $visited;
        }
        &:hover {
            color: $hover;
        }
        &:active,
        &:focus {
            color: $active;
        }
    }
}
